<?xml version="1.0" encoding="utf-8"?>
<widget id="mendix.reactflowts.ReactFlowTs" pluginWidget="true" needsEntityContext="true"
    offlineCapable="true"
    supportedPlatform="Web"
    xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>React Flow</name>
    <description>Implementation of the React Flow library for Mendix</description>
    <helpUrl>https://github.com/bsgriggs/mendix-react-flow/blob/master/README.md</helpUrl>
    <icon>
        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</icon>
    <properties>
        <propertyGroup caption="Nodes">
            <propertyGroup caption="Data">
                <property key="nodes" type="datasource" isList="true" required="true">
                    <caption>Nodes list</caption>
                    <description></description>
                </property>
                <property key="selectedNode" type="selection" dataSource="nodes">
                    <caption>Selected node</caption>
                    <description />
                    <selectionTypes>
                        <selectionType name="Single" />
                    </selectionTypes>
                </property>
                <property key="nodeId" type="expression" required="true" dataSource="nodes">
                    <caption>Id</caption>
                    <description>String that MUST be unique across ALL nodes.</description>
                    <returnType type="String" />
                </property>
                <property key="nodeLabel" type="expression" required="true" dataSource="nodes">
                    <caption>Label</caption>
                    <description>User friendly name of the node.</description>
                    <returnType type="String" />
                </property>
                <property key="nodeContent" type="widgets" required="true" dataSource="nodes">
                    <caption>Node</caption>
                    <description></description>
                </property>
            </propertyGroup>
            <propertyGroup caption="Position (From the Top-Left) (In Pixels)">
                <property key="nodePosX" type="expression" required="true" dataSource="nodes">
                    <caption>X position</caption>
                    <description>Negative is Left, Positive is Right</description>
                    <returnType type="Integer" />
                </property>
                <property key="nodePosY" type="expression" required="true" dataSource="nodes">
                    <caption>Y position</caption>
                    <description>Negative is Up, Positive is Down</description>
                    <returnType type="Integer" />
                </property>
            </propertyGroup>
            <propertyGroup caption="Size (Optional) (In Pixels)">
                <property key="nodeWidth" type="expression" required="false" dataSource="nodes"
                    defaultValue="300">
                    <caption>Width</caption>
                    <description></description>
                    <returnType type="Integer" />
                </property>
                <property key="nodeHeight" type="expression" required="false" dataSource="nodes">
                    <caption>Height</caption>
                    <description></description>
                    <returnType type="Integer" />
                </property>
            </propertyGroup>
            <propertyGroup caption="Style">
                <property key="nodeClassName" type="expression" required="false" dataSource="nodes">
                    <caption>Dynamic class</caption>
                    <description></description>
                    <returnType type="String" />
                </property>
                <property key="focusedNodeOverride" type="expression" required="false">
                    <caption>Focus override</caption>
                    <description>When this string changes, the widget will focus this Node ID.</description>
                    <returnType type="String" />
                </property>
                <property key="allowDragging" type="expression" required="true" defaultValue="true"
                    dataSource="nodes">
                    <caption>Allow dragging</caption>
                    <description></description>
                    <returnType type="Boolean" />
                </property>
            </propertyGroup>
        </propertyGroup>
        <propertyGroup caption="Edges">
            <propertyGroup caption="Data">
                <property key="edges" type="datasource" isList="true" required="true">
                    <caption>Edges list</caption>
                    <description></description>
                </property>
                <property key="edgeLabel" type="expression" required="false" dataSource="edges">
                    <caption>Label</caption>
                    <description>(Optional) Displayed in the middle of the line.</description>
                    <returnType type="String" />
                </property>
                <property key="nodeSourceId" type="expression" required="true" dataSource="edges">
                    <caption>Source node id</caption>
                    <description>ID of the node to start the line from.</description>
                    <returnType type="String" />
                </property>
                <property key="sourceLineSide" type="expression" required="true" dataSource="edges"
                    defaultValue="'Bottom'">
                    <caption>Source line side</caption>
                    <description>Must be one of the exact strings: 'Top', 'Right', 'Left', or 'Bottom'.</description>
                    <returnType type="String" />
                </property>
                <property key="nodeTargetId" type="expression" required="true" dataSource="edges">
                    <caption>Target node id</caption>
                    <description>ID of the node to end the line at.</description>
                    <returnType type="String" />
                </property>
                <property key="targetLineSide" type="expression" required="true" dataSource="edges"
                    defaultValue="'Top'">
                    <caption>Target line side</caption>
                    <description>Must be one of the exact strings: 'Top', 'Right', 'Left', or 'Bottom'.</description>
                    <returnType type="String" />
                </property>
            </propertyGroup>
            <propertyGroup caption="Style">
                <property key="edgeClassName" type="expression" required="false" dataSource="edges">
                    <caption>Dynamic class</caption>
                    <description></description>
                    <returnType type="String" />
                </property>
                <property key="arrowType" type="expression" required="true" dataSource="edges"
                    defaultValue="'Line'">
                    <caption>Arrow type</caption>
                    <description>Must be one of the exact strings: 'Solid' or 'Line'.</description>
                    <returnType type="String" />
                </property>
                <property key="lineType" type="expression" required="true" dataSource="edges"
                    defaultValue="'Solid'">
                    <caption>Line type</caption>
                    <description>Must be one of the exact strings: 'Solid' or 'Dotted'.</description>
                    <returnType type="String" />
                </property>
                <property key="curveType" type="expression" required="true" dataSource="edges"
                    defaultValue="'bezier'">
                    <caption>Curve type</caption>
                    <description>Must be one of the exact strings: 'bezier', 'step', 'smoothstep', or 'straight'.</description>
                    <returnType type="String" />
                </property>
            </propertyGroup>
        </propertyGroup>
        <propertyGroup caption="General Style">
            <propertyGroup caption="Container Size">
                <property key="containerWidth" type="expression" required="true"
                    defaultValue="'100%'">
                    <caption>Width</caption>
                    <description>String of a CSS Width.</description>
                    <returnType type="String" />
                </property>
                <property key="containerHeight" type="expression" required="true"
                    defaultValue="'75vh'">
                    <caption>Height</caption>
                    <description>String of a CSS Height.</description>
                    <returnType type="String" />
                </property>
                <property key="loadingContent" type="widgets" required="true">
                    <caption>Loading content</caption>
                    <description>Content shown while the widget is loading.</description>
                </property>
            </propertyGroup>
            <propertyGroup caption="Zoom">
                <property key="defaultViewType" type="enumeration" defaultValue="ZOOM">
                    <caption>Default view type</caption>
                    <description>Full - display the entire flow on load
Zoom - specify a default zoom value (starts at the top of the flow)</description>
                    <enumerationValues>
                        <enumerationValue key="ZOOM">Zoom</enumerationValue>
                        <enumerationValue key="FULL">Full</enumerationValue>
                    </enumerationValues>
                </property>
                <property key="defaultZoom" type="expression" required="true" defaultValue="1">
                    <caption>Default zoom</caption>
                    <description>Min 0.5, Max 2</description>
                    <returnType type="Decimal" />
                </property>
                <property key="navZoom" type="expression" required="true" defaultValue="1">
                    <caption>Navigation zoom</caption>
                    <description>Zoom when using the nav buttons. Min 0.5, Max 2.</description>
                    <returnType type="Decimal" />
                </property>
            </propertyGroup>
            <propertyGroup caption="Background">
                <property key="backgroundType" type="enumeration" required="true"
                    defaultValue="CROSSES">
                    <caption>Type</caption>
                    <description></description>
                    <enumerationValues>
                        <enumerationValue key="CROSSES">Crosses</enumerationValue>
                        <enumerationValue key="DOTS">Dots</enumerationValue>
                        <enumerationValue key="LINES">Lines</enumerationValue>
                    </enumerationValues>
                </property>
                <property key="backgroundGap" type="expression" required="true" defaultValue="50">
                    <caption>Gap</caption>
                    <description>In Pixels</description>
                    <returnType type="Integer" />
                </property>
            </propertyGroup>
        </propertyGroup>
        <propertyGroup caption="Events">
            <property key="onClickNode" type="action" required="false" dataSource="nodes">
                <caption>On click node</caption>
                <description></description>
            </property>
            <property key="onDragNode" type="action" required="false" dataSource="nodes">
                <caption>On drag node</caption>
                <description>Execute after the user finished dragging a node.</description>
                <!-- <actionVariables>
                    <actionVariable key="newXPosition" type="Integer"
                        caption="The absolute X position the node finished at" />
                    <actionVariable key="newYPosition" type="Integer"
                        caption="The absolute Y position the node finished at" />
                </actionVariables> -->
            </property>
            <property key="onClickEdge" type="action" required="false" dataSource="edges">
                <caption>On click edge</caption>
                <description></description>
            </property>
        </propertyGroup>
        <propertyGroup caption="Accessibility">
            <property key="nodeAriaLabel" type="expression" required="false" dataSource="nodes">
                <caption>Node aria label</caption>
                <description></description>
                <returnType type="String" />
            </property>
            <property key="edgeAriaLabel" type="expression" required="false" dataSource="edges">
                <caption>Edge aria label</caption>
                <description></description>
                <returnType type="String" />
            </property>
        </propertyGroup>
        <propertyGroup caption="Common">
            <propertyGroup caption="Common">
                <systemProperty key="Name" />
                <systemProperty key="TabIndex" />
            </propertyGroup>
            <propertyGroup caption="Visibility">
                <systemProperty key="Visibility" />
            </propertyGroup>
        </propertyGroup>
    </properties>
</widget>